# In[1]:


import pandas as pd


# # Reading multiple files

# **read seperatelly**

# In[12]:


df0 = pd.read_csv('sales-jan-2015.csv')
print(df0.head())
df0.shape
#other forms: pd.read_excel(),pd.read_html(),pd.read_json()


# In[13]:


df1 = pd.read_csv('sales-feb-2015.csv')
print(df1.head())
df1.shape


# In[121]:


merge1 = pd.concat([df0,df1],axis=0)
merge1.head()


# In[123]:


merge2 = pd.concat([df0,df1],axis=1,keys=['Jan','Feb'])
merge2.head()


# **read using loops**

# In[115]:


filenames = ['sales-jan-2015.csv','sales-feb-2015.csv']
dataframe = []


# In[116]:


for file in filenames:
    dataframe.append(pd.read_csv(file,index_col='Date',parse_dates=True))


# In[119]:


salesT = pd.concat(dataframe,axis='rows')
salesT.head()


# **using comprehension**

# In[25]:


filenames = ['sales-jan-2015.csv','sales-feb-2015.csv']
dataframe = [pd.read_csv(f) for f in filenames]


# **using glob**

# In[27]:


from glob import glob
filenames=glob('sales*.csv')
dataframe=[pd.read_csv(f) for f in filenames]


# # Reindexing DataFrames

# In[52]:


#read file
mydf = pd.read_csv('pittsburgh2013.csv')

#transfer Date to datetime, errors='coerce' can avoid following errors
mydf['Date'] = pd.to_datetime(mydf['Date'],errors='coerce')

#extract month from Date
mydf['month']=mydf['Date'].dt.month

#write to files
w_mean = mydf.loc[:,['month','Mean TemperatureF']]
w_mean.to_csv('w_mean.csv',index=False)

w_max = mydf.loc[:,['month','Max TemperatureF']]
w_max.to_csv('w_max.csv',index=False)


# In[47]:


import numpy as np
df2 = pd.read_csv('w_mean.csv',index_col='month')
df3 = df2.groupby('month').agg(np.mean)
df3


# In[53]:


df4 = pd.read_csv('w_max.csv',index_col='month')
df5 = df4.groupby('month').max()
df5


# In[54]:


print(df3.index)
print(df5.index)


# **reindex**

# In[61]:


ordered=[2,4,1,3,5,6,7,8,9,10,11,12]
df3.reindex(ordered)


# In[60]:


df5.reindex(df3.index)


# In[87]:


order1 = [1,2,13]
df6=df3.reindex(order1)
df6


# In[88]:


df7 = df6.dropna()
df7


# In[89]:


df8 = df6.ffill()
df8


# In[50]:


df3.sort_index()


# # Arithmetic with Series & DataFrames

# In[63]:


weather = pd.read_csv('pittsburgh2013.csv',index_col='Date',parse_dates=True)
weather.head()


# In[64]:


weather.loc['2013-7-1':'2013-7-7', 'PrecipitationIn']


# **scalar multiplication**

# In[66]:


weather.loc['2013-7-1':'2013-7-7', 'PrecipitationIn']*2.5


# **Relative temperature range**

# In[73]:


week1_range = weather.loc['2013-7-1':'2013-7-7',['Min TemperatureF','Max TemperatureF']]
week1_range


# In[97]:


#replace F in columns' name to Fa
week1_range.columns = week1_range.columns.str.replace('F','Fa')
week1_range


# In[74]:


week1_mean = weather.loc['2013-7-1':'2013-7-7','Mean TemperatureF']
week1_mean


# In[75]:


#if we want to obtian week1_range/week1_mean, we cannot calculate directly
week1_range/week1_mean


# In[76]:


week1_range.divide(week1_mean,axis='rows')


# **Percentage changes**

# In[78]:


week1_mean.pct_change()*100


# ## Adding

# In[79]:


gold = pd.read_csv('gold_top5.csv',index_col=0)
silver = pd.read_csv('silver_top5.csv',index_col=0)
bronze = pd.read_csv('bronze_top5.csv',index_col=0)


# In[80]:


gold+silver


# In[81]:


gold.add(silver,fill_value=0)


# In[82]:


gold+silver+bronze


# In[86]:


gold.add(silver,fill_value=0).add(bronze,fill_value=0)

